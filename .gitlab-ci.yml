stages:
  - lint
  - test
  - build
  - release

lint:
  stage: lint
  image: python:3.12-bookworm
  before_script:
    - python3 -m pip install --no-cache-dir -U pip pipenv
    - python3 -m pipenv install --dev --deploy --system
  script:
    - python3 -m ruff format --no-cache --check .
    - python3 -m mypy --python-version 3.9 .
    - python3 -m mypy --python-version 3.10 .
    - python3 -m mypy --python-version 3.11 .
    - python3 -m mypy --python-version 3.12 .
    - python3 -m bandit -r .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"'


sec-gitleaks:
  stage: lint
  image:
    name: zricethezav/gitleaks:latest
    entrypoint: [""]
  script:
    - gitleaks detect
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"'


test:
  image: python:3.12-bookworm
  stage: test
  before_script:
    - python3 -m pip install --no-cache-dir -U pip pipenv
    - python3 -m pipenv install --dev --deploy --system
  script:
    - python3 -m unittest discover -s ./tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"'


build:
  stage: build
  image: python:3.12-bookworm
  before_script:
    - python3 -m pip install -U pip build
  script:
    - sed -i "s/__VERSION__/$CI_COMMIT_TAG/g" pyproject.toml
    - find . -type f -name '*.py' -exec sed -i "s/__VERSION__/$CI_COMMIT_TAG/g" {} +
    - python -m build --outdir dist .
  artifacts:
    paths:
      - dist/*
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'


release:
  stage: release
  environment:
    name: release
  image: python:3.12-bookworm
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  before_script:
    - apt update && apt install -y jq
    - python3 -m pip install -U twine id
  script:
    - oidc_token=$(python -m id PYPI)
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")
    - twine check dist/*
    - twine upload --repository pypi -u __token__ -p "${api_token}" dist/*
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
