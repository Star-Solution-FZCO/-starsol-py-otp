stages:
  - lint
  - test
  - build
  - release

lint:
  stage: lint
  image: python:3.12-bookworm
  before_script:
    - python3 -m pip install --no-cache-dir -U pip pipenv
    - python3 -m pipenv install --dev --deploy --system
  script:
    - python3 -m ruff format --no-cache --check .
    - python3 -m mypy --python-version 3.9 .
    - python3 -m mypy --python-version 3.10 .
    - python3 -m mypy --python-version 3.11 .
    - python3 -m mypy --python-version 3.12 .
  except:
    - tags

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

test:
  image: python:3.12-bookworm
  stage: test
  before_script:
    - python3 -m pip install --no-cache-dir -U pip pipenv
    - python3 -m pipenv install --dev --deploy --system
  script:
    - python3 -m unittest discover -s ./tests
  except:
    - tags

build:
  stage: build
  image: python:3.12-bookworm
  only:
    - tags
  before_script:
    - python3 -m pip install -U pip setuptools wheel
  script:
    - find . -type f -name '*.py' -exec sed -i "s/__VERSION__/$CI_COMMIT_TAG/g" {} +
    - python -m build --outdir dist .
  artifacts:
    paths:
      - dist/*

release:
  stage: release
  environment:
    name: release
  image: python:3.12-bookworm
  only:
    - tags
  before_script:
    - apt update && apt install -y jq
    - python3 -m pip install -U twine id
  script:
    - oidc_token=$(python -m id PYPI)
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")
    - twine check dist/*
    - twine upload --repository pypi -u __token__ "${api_token}" dist/*